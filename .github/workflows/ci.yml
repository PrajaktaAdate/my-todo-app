name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - run: npm install
      - name: Install nyc for coverage
        run: npm install --save-dev nyc
      - run: npm start &
      - name: Wait for backend
        run: |
          for i in {1..10}; do
            nc -z localhost 4000 && echo Backend up && exit 0
            sleep 2
          done
          echo Backend did not start in time && exit 1
      - name: Install Newman
        run: npm install -g newman
      - name: Run API tests and save HTML report
        run: newman run api-tests.postman_collection.json -r cli,html --reporter-html-export newman-report.html
      - name: Upload Newman report
        uses: actions/upload-artifact@v4
        with:
          name: newman-report
          path: backend/newman-report.html
      - name: Run backend code coverage (if applicable)
        run: |
          if [ -f "test.js" ]; then npx nyc --reporter=lcov node test.js; fi
      - name: Upload backend coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm install || { cat npm-debug.log || true; exit 1; }
      - run: npm list --depth=0
      - run: npm run build

  ui-tests:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    defaults:
      run:
        working-directory: tests
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: tests/package-lock.json
      - run: npm install || { cat npm-debug.log || true; exit 1; }
      - run: npm list --depth=0
      - name: Start backend
        run: cd ../backend && npm start &
      - name: Start frontend
        run: cd ../frontend && npm start &
      - name: Wait for servers
        run: |
          for i in {1..15}; do
            nc -z localhost 3000 && nc -z localhost 4000 && echo Servers up && exit 0
            sleep 2
          done
          echo Servers did not start in time && exit 1
      - name: Run Playwright tests and save HTML report
        run: npx playwright install --with-deps && npx playwright test --reporter=html
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/playwright-report
      - name: Upload Playwright test snapshots
        uses: actions/upload-artifact@v4
        with:
          name: playwright-snapshots
          path: tests/test-results